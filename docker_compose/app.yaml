version: "3.9"

services:
  main-app:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: main-app
    working_dir: /app
    env_file:
      - ../.env

    depends_on:
      postgres:                      
        condition: service_healthy
      redis:
        condition: service_healthy

    volumes:
      - static_volume:/staticfiles
      - media_volume:/media

    expose:                         
      - "8000"

    networks:
      - default
      - beam-network

  redis:
    image: redis:7-alpine
    container_name: redis
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    volumes:
      - redis_data:/data
    ports:
      - "6378:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default
      - beam-network

  caddy:
    image: caddy:2-alpine
    container_name: caddy
    depends_on:
      - main-app
    restart: unless-stopped


    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - static_volume:/staticfiles:ro
      - media_volume:/media:ro
      - caddy_data:/data
      - caddy_config:/config

    ports:
      - "80:80"            
      # - "443:443"        

    networks:
      - default
      - beam-network

volumes:
  static_volume:
  media_volume:
  redis_data:
  caddy_data:
  caddy_config:

networks:
  beam-network:
    external: true        
    name: beam-network
